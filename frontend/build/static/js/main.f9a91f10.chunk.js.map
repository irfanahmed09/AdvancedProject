{"version":3,"sources":["components/commands.jsx","App.js","reportWebVitals.js","index.js"],"names":["Command","props","state","text","axios","get","then","res","setState","data","catch","err","console","log","this","map","item","key","className","Component","App","start","recordState","RecordState","START","pause","PAUSE","stop","STOP","onStop","audioData","url","sendToServer","mediaBlob","a","xhr_get_audio","XMLHttpRequest","open","responseType","onload","e","status","readyState","response","blob","xhr_send","fd","FormData","append","entries","send","backgroundColor","id","controls","src","onClick","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9a91f10.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n/*\r\n\tRead a text file and out put the content.\r\n\t\r\n\tExample Usage:\r\n\tvar myTxt = require(\"./myTxt.txt\");\r\n\t...\r\n\t<TextFileReader\r\n\t\ttxt={myTxt}\r\n\t/>\r\n */\r\nclass Command extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      text: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"/read-file\")\r\n      .then((res) => {\r\n        this.setState({\r\n          text: res.data,\r\n        });\r\n        //console.log(this.state.text);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error from ShowResumeDetails\");\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.text.map((item, key) => {\r\n          return (\r\n            <div\r\n              className=\"text-white m-2 rounded text-center bg-dark\"\r\n              key={key}\r\n            >\r\n              {item}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Command;\r\n","import React from \"react\";\n\nimport AudioReactRecorder, { RecordState } from \"audio-react-recorder\";\nimport \"audio-react-recorder/dist/index.css\";\nimport Command from \"./components/commands\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      recordState: null,\n      audioData: null,\n    };\n  }\n\n  start = () => {\n    this.setState({\n      recordState: RecordState.START,\n    });\n  };\n\n  pause = () => {\n    this.setState({\n      recordState: RecordState.PAUSE,\n    });\n  };\n\n  stop = () => {\n    this.setState({\n      recordState: RecordState.STOP,\n    });\n  };\n\n  onStop = (data) => {\n    this.setState({\n      audioData: data,\n    });\n    console.log(\"This is data url : \", data.url);\n    this.sendToServer(data.url);\n    console.log(\"onStop: audio data\", data);\n  };\n\n  sendToServer = async (mediaBlob) => {\n    console.log(\"sending blob to server.\");\n    if (mediaBlob != null) {\n      var xhr_get_audio = new XMLHttpRequest();\n      xhr_get_audio.open(\"GET\", mediaBlob, true);\n      xhr_get_audio.responseType = \"blob\";\n      xhr_get_audio.onload = function (e) {\n        if (this.status === 200 && this.readyState === 4) {\n          console.log(\"this blob is: \", this.response);\n          var blob = this.response;\n          //send the blob to the server\n          var xhr_send = new XMLHttpRequest();\n          var fd = new FormData();\n          fd.append(\"audio_data\", blob, \"cde.wav\");\n          for (var key of fd.entries()) {\n            console.log(key[0] + \", \" + key[1]);\n          }\n          console.log(\"Fd is : \", fd);\n          xhr_send.open(\"POST\", \"/receive-audio\", true);\n          xhr_send.send(fd);\n        }\n      };\n      console.log(\"Before sending\");\n      xhr_get_audio.send();\n    }\n  };\n\n  render() {\n    const { recordState } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm\">\n            <AudioReactRecorder\n              state={recordState}\n              onStop={this.onStop}\n              backgroundColor=\"#99ccff\"\n            />\n            <audio\n              id=\"audio\"\n              controls\n              src={this.state.audioData ? this.state.audioData.url : null}\n            ></audio>\n            <div className=\"row\">\n              <button\n                className=\"btn btn-primary\"\n                id=\"record\"\n                onClick={this.start}\n              >\n                Start\n              </button>\n              <button\n                className=\"btn btn-warning\"\n                id=\"pause\"\n                onClick={this.pause}\n              >\n                Pause\n              </button>\n              <button className=\"btn btn-danger\" id=\"stop\" onClick={this.stop}>\n                Stop\n              </button>\n            </div>\n          </div>\n          <div className=\"command-container bg-secondary rounded col-sm\">\n            <Command />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}